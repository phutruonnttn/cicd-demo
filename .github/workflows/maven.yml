name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

# tránh chạy chồng chéo
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'          # đổi '17' nếu pom dùng 17
          distribution: 'temurin'
          cache: maven
      - name: Run tests
        run: mvn -B test
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Run SpotBugs (static analysis)
        run: mvn -B spotbugs:spotbugs
      - name: Run Checkstyle (code style)
        run: mvn -B checkstyle:checkstyle
      - name: Generate SpotBugs SARIF
        run: mvn -B spotbugs:spotbugs -Dspotbugs.outputFormat=sarif -Dspotbugs.outputFile=spotbugs.sarif
      - name: Upload SpotBugs SARIF to GitHub
        if: always() && hashFiles('spotbugs.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: spotbugs.sarif
  owasp-depcheck:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Cache OWASP Dependency-Check data
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: ${{ runner.os }}-dc-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-dc-
      - name: Run OWASP Dependency-Check
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: mvn -B -Dnvd.api.key="${NVD_API_KEY}" org.owasp:dependency-check-maven:check
      - name: Upload Dependency-Check SARIF
        if: always() && hashFiles('target/dependency-check-report.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: target/dependency-check-report.sarif
      - name: Upload HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: |
            target/dependency-check-report.html
            target/dependency-check-report.xml
  sonar:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'          # khớp với job test & pom
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build & Analyze (SonarCloud)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B clean test jacoco:report
          org.sonarsource.scanner.maven:sonar-maven-plugin:5.2.0.4988:sonar
          -Dsonar.projectKey=phutruonnttn_cicd-demo
          -Dsonar.organization=phutruonnttn
          -Dsonar.host.url=https://sonarcloud.io
  snyk:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build (skip tests)
        run: mvn -B -DskipTests package
      # Cài Snyk CLI (không dùng Docker action)
      - name: Setup Snyk CLI
        uses: snyk/actions/setup@master
      - name: Snyk test (xuất SARIF)
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk auth "$SNYK_TOKEN"
          snyk test \
            --file=pom.xml \
            --package-manager=maven \
            --project-name=${{ github.repository }} \
            --severity-threshold=medium \
            --sarif --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        if: always() && hashFiles('snyk.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
      # Note: We rely on GitHub Integration in Snyk for project management.
      # Do not run `snyk monitor` here to avoid creating duplicate targets.

  staging-deploy:
    needs: [test, lint, sonar, snyk, owasp-depcheck]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Build application
        run: mvn -B clean package -DskipTests
      
      - name: Build Docker image
        run: |
          docker build -t yushan-be-staging:${{ github.sha }} .
          docker tag yushan-be-staging:${{ github.sha }} yushan-be-staging:latest
      
      - name: Deploy to Railway Staging
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          REDIS_URL: ${{ secrets.STAGING_REDIS_URL }}
          REDIS_TOKEN: ${{ secrets.STAGING_REDIS_TOKEN }}
        run: |
          # Deploy to Railway staging
          railway deploy --service demo-staging
      
      - name: Wait for deployment
        run: sleep 60
      
      - name: Health check
        run: |
          curl -f https://demo-staging-xxxx.up.railway.app/actuator/health || exit 1
      
      - name: Run smoke tests
        run: |
          # Test critical endpoints
          curl -f https://demo-staging-xxxx.up.railway.app/api/nations
          curl -f https://demo-staging-xxxx.up.railway.app/api/currencies
      
      - name: OWASP ZAP Baseline Scan (Staging)
        continue-on-error: true
        run: |
          docker run --rm -v $(pwd):/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t https://demo-staging-xxxx.up.railway.app \
            -J staging-zap-report.json -w staging-zap-report.md -r staging-zap-report.html -a
      
      - name: Upload ZAP Staging Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-staging-report
          path: staging-zap-report.html

  zap:
    needs: [staging-deploy]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      issues: write
      pull-requests: write
    steps:
      - name: OWASP ZAP Baseline Scan (production URL)
        continue-on-error: true
        run: |
          touch zap.yaml report_json.json report_md.md report_html.html
          chmod 666 zap.yaml report_json.json report_md.md report_html.html
          docker run --rm -v $(pwd):/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t https://cicd-demo-production-3c00.up.railway.app \
            -J report_json.json -w report_md.md -r report_html.html -a
      - name: Upload ZAP HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: report_html.html
          
      - name: Upload ZAP JSON Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-json
          path: report_json.json